<?php

function community_data_page_build(&$page) {
  if (current_path() == 'api-explorer') {
    $app_template_path = drupal_get_path('module', 'community_data'). '/theme/api_app.tpl.php';   
    $app_content = "";
    $all_services = get_all_services();
    foreach ($all_services as $serviceObj) {
          $app_content = $app_content . theme_render_template($app_template_path, $serviceObj);
    }

     $clean_json = str_replace("'","\'",json_encode($all_services)); 
     $api_content = array('app_content' => $app_content, 'services' => $clean_json);

     $template_path = drupal_get_path('module', 'community_data'). '/theme/api_landing.tpl.php';
     $api_browser_content = theme_render_template($template_path, $api_content);

    $page ['content']['disclaimer'] = array(
      '#markup' => t($api_browser_content),
      '#weight' => 25,
    );     
  }
}

function get_all_services(){
    $all_services = array();
    if ($cache = cache_get('api_browser_all_services')) {
      $all_services = $cache->data;
    } else {
    $ns_arry = get_namespaces();
    $ns_arry = $ns_arry["result"];
    foreach ($ns_arry as $value) {
      $service_arry = get_services_for_namespace($value["name"]);
      $service_arry = $service_arry["result"];
      if(!empty($service_arry)){
        foreach ($service_arry as $serviceObj) {
          $base64Img = getImg($serviceObj);
          $serviceObj['icon'] = $base64Img;
          array_push($all_services, $serviceObj);
        }
      }
    }

    usort($all_services, 'sort_name_version');
    cache_set('api_browser_all_services', $all_services, 'cache', time() + 120);
  }
    return $all_services; 
}


function get_namespaces(){
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://api.araport.org/community/v0.3/namespaces');
    curl_setopt($ch, CURLOPT_HTTPHEADER, array('Authorization: Bearer a45fc6ab902236e9aa75bf4d619a521a'));
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    
    $resp = curl_exec($ch);
    
    $json_obj = json_decode($resp, true);
    usort($json_obj['result'], 'sort_name');
    return $json_obj;
  }

  function sort_name($a, $b){
    return strcmp($a['name'],$b['name']);
  }

  function sort_name_version($a,$b){
    return strcmp($a['name'] . '_v' . $a['version'], $b['name'] . '_v' . $b['version']);
  }

  function get_services_for_namespace($service_name){
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://api.araport.org/community/v0.3/' . $service_name . '/services?');
    curl_setopt($ch, CURLOPT_HTTPHEADER, array('Authorization: Bearer a45fc6ab902236e9aa75bf4d619a521a'));
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    
    $resp = curl_exec($ch);
    $json_obj = json_decode($resp, true);
    
    return $json_obj;
  }

  function getImg($srv){
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $srv['self'] . '/icon');
    

    curl_setopt($ch, CURLOPT_HTTPHEADER, array('Authorization: Bearer a45fc6ab902236e9aa75bf4d619a521a'));
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    
    $resp = curl_exec($ch);
    $http_status_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    if($http_status_code == 200){
    $base64 = base64_encode($resp);
    } else {
      $base64 = null;
    }
    return $base64;
  }